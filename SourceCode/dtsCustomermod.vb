'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dtsCustomermod
    Inherits DataSet
    
    Private tableΠελατολόγιο As ΠελατολόγιοDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Πελατολόγιο")) Is Nothing) Then
                Me.Tables.Add(New ΠελατολόγιοDataTable(ds.Tables("Πελατολόγιο")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Πελατολόγιο As ΠελατολόγιοDataTable
        Get
            Return Me.tableΠελατολόγιο
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dtsCustomermod = CType(MyBase.Clone,dtsCustomermod)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Πελατολόγιο")) Is Nothing) Then
            Me.Tables.Add(New ΠελατολόγιοDataTable(ds.Tables("Πελατολόγιο")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableΠελατολόγιο = CType(Me.Tables("Πελατολόγιο"),ΠελατολόγιοDataTable)
        If (Not (Me.tableΠελατολόγιο) Is Nothing) Then
            Me.tableΠελατολόγιο.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dtsCustomermod"
        Me.Prefix = ""
        Me.Namespace = "http://www.tempuri.org/dtsCustomermod.xsd"
        Me.Locale = New System.Globalization.CultureInfo("el-GR")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableΠελατολόγιο = New ΠελατολόγιοDataTable
        Me.Tables.Add(Me.tableΠελατολόγιο)
    End Sub
    
    Private Function ShouldSerializeΠελατολόγιο() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub ΠελατολόγιοRowChangeEventHandler(ByVal sender As Object, ByVal e As ΠελατολόγιοRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠελατολόγιοDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnkinhto As DataColumn
        
        Private columnwebsite As DataColumn
        
        Private columnΑριθμόςΦαξ As DataColumn
        
        Private columnΑΦΜ As DataColumn
        
        Private columnΔιεύθυνσηEmail As DataColumn
        
        Private columnΔιεύθυνσηΧρέωσης As DataColumn
        
        Private columnΔΟΥ As DataColumn
        
        Private columnΕπάγγελμα As DataColumn
        
        Private columnΕπωνυμίαΕταιρείας As DataColumn
        
        Private columnΕπώνυμοΕπαφής As DataColumn
        
        Private columnΚωδΑγοραστή As DataColumn
        
        Private column_Νομός_Περιοχή As DataColumn
        
        Private columnΌνομαΕπαφής As DataColumn
        
        Private columnΠόλη As DataColumn
        
        Private columnΣημειώσεις As DataColumn
        
        Private columnΤαχυδρομικόςΚώδικας As DataColumn
        
        Private columnΤηλέφωνο As DataColumn
        
        Private columnΤηλέφωνο1 As DataColumn
        
        Private column_Χώρα_Περιοχή As DataColumn
        
        Friend Sub New()
            MyBase.New("Πελατολόγιο")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property kinhtoColumn As DataColumn
            Get
                Return Me.columnkinhto
            End Get
        End Property
        
        Friend ReadOnly Property websiteColumn As DataColumn
            Get
                Return Me.columnwebsite
            End Get
        End Property
        
        Friend ReadOnly Property ΑριθμόςΦαξColumn As DataColumn
            Get
                Return Me.columnΑριθμόςΦαξ
            End Get
        End Property
        
        Friend ReadOnly Property ΑΦΜColumn As DataColumn
            Get
                Return Me.columnΑΦΜ
            End Get
        End Property
        
        Friend ReadOnly Property ΔιεύθυνσηEmailColumn As DataColumn
            Get
                Return Me.columnΔιεύθυνσηEmail
            End Get
        End Property
        
        Friend ReadOnly Property ΔιεύθυνσηΧρέωσηςColumn As DataColumn
            Get
                Return Me.columnΔιεύθυνσηΧρέωσης
            End Get
        End Property
        
        Friend ReadOnly Property ΔΟΥColumn As DataColumn
            Get
                Return Me.columnΔΟΥ
            End Get
        End Property
        
        Friend ReadOnly Property ΕπάγγελμαColumn As DataColumn
            Get
                Return Me.columnΕπάγγελμα
            End Get
        End Property
        
        Friend ReadOnly Property ΕπωνυμίαΕταιρείαςColumn As DataColumn
            Get
                Return Me.columnΕπωνυμίαΕταιρείας
            End Get
        End Property
        
        Friend ReadOnly Property ΕπώνυμοΕπαφήςColumn As DataColumn
            Get
                Return Me.columnΕπώνυμοΕπαφής
            End Get
        End Property
        
        Friend ReadOnly Property ΚωδΑγοραστήColumn As DataColumn
            Get
                Return Me.columnΚωδΑγοραστή
            End Get
        End Property
        
        Friend ReadOnly Property _Νομός_ΠεριοχήColumn As DataColumn
            Get
                Return Me.column_Νομός_Περιοχή
            End Get
        End Property
        
        Friend ReadOnly Property ΌνομαΕπαφήςColumn As DataColumn
            Get
                Return Me.columnΌνομαΕπαφής
            End Get
        End Property
        
        Friend ReadOnly Property ΠόληColumn As DataColumn
            Get
                Return Me.columnΠόλη
            End Get
        End Property
        
        Friend ReadOnly Property ΣημειώσειςColumn As DataColumn
            Get
                Return Me.columnΣημειώσεις
            End Get
        End Property
        
        Friend ReadOnly Property ΤαχυδρομικόςΚώδικαςColumn As DataColumn
            Get
                Return Me.columnΤαχυδρομικόςΚώδικας
            End Get
        End Property
        
        Friend ReadOnly Property ΤηλέφωνοColumn As DataColumn
            Get
                Return Me.columnΤηλέφωνο
            End Get
        End Property
        
        Friend ReadOnly Property Τηλέφωνο1Column As DataColumn
            Get
                Return Me.columnΤηλέφωνο1
            End Get
        End Property
        
        Friend ReadOnly Property _Χώρα_ΠεριοχήColumn As DataColumn
            Get
                Return Me.column_Χώρα_Περιοχή
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As ΠελατολόγιοRow
            Get
                Return CType(Me.Rows(index),ΠελατολόγιοRow)
            End Get
        End Property
        
        Public Event ΠελατολόγιοRowChanged As ΠελατολόγιοRowChangeEventHandler
        
        Public Event ΠελατολόγιοRowChanging As ΠελατολόγιοRowChangeEventHandler
        
        Public Event ΠελατολόγιοRowDeleted As ΠελατολόγιοRowChangeEventHandler
        
        Public Event ΠελατολόγιοRowDeleting As ΠελατολόγιοRowChangeEventHandler
        
        Public Overloads Sub AddΠελατολόγιοRow(ByVal row As ΠελατολόγιοRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddΠελατολόγιοRow( _
                    ByVal kinhto As String,  _
                    ByVal website As String,  _
                    ByVal ΑριθμόςΦαξ As String,  _
                    ByVal ΑΦΜ As String,  _
                    ByVal ΔιεύθυνσηEmail As String,  _
                    ByVal ΔιεύθυνσηΧρέωσης As String,  _
                    ByVal ΔΟΥ As String,  _
                    ByVal Επάγγελμα As String,  _
                    ByVal ΕπωνυμίαΕταιρείας As String,  _
                    ByVal ΕπώνυμοΕπαφής As String,  _
                    ByVal ΚωδΑγοραστή As String,  _
                    ByVal _Νομός_Περιοχή As String,  _
                    ByVal ΌνομαΕπαφής As String,  _
                    ByVal Πόλη As String,  _
                    ByVal Σημειώσεις As String,  _
                    ByVal ΤαχυδρομικόςΚώδικας As String,  _
                    ByVal Τηλέφωνο As String,  _
                    ByVal Τηλέφωνο1 As String,  _
                    ByVal _Χώρα_Περιοχή As String) As ΠελατολόγιοRow
            Dim rowΠελατολόγιοRow As ΠελατολόγιοRow = CType(Me.NewRow,ΠελατολόγιοRow)
            rowΠελατολόγιοRow.ItemArray = New Object() {kinhto, website, ΑριθμόςΦαξ, ΑΦΜ, ΔιεύθυνσηEmail, ΔιεύθυνσηΧρέωσης, ΔΟΥ, Επάγγελμα, ΕπωνυμίαΕταιρείας, ΕπώνυμοΕπαφής, ΚωδΑγοραστή, _Νομός_Περιοχή, ΌνομαΕπαφής, Πόλη, Σημειώσεις, ΤαχυδρομικόςΚώδικας, Τηλέφωνο, Τηλέφωνο1, _Χώρα_Περιοχή}
            Me.Rows.Add(rowΠελατολόγιοRow)
            Return rowΠελατολόγιοRow
        End Function
        
        Public Function FindByΚωδΑγοραστή(ByVal ΚωδΑγοραστή As String) As ΠελατολόγιοRow
            Return CType(Me.Rows.Find(New Object() {ΚωδΑγοραστή}),ΠελατολόγιοRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As ΠελατολόγιοDataTable = CType(MyBase.Clone,ΠελατολόγιοDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New ΠελατολόγιοDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnkinhto = Me.Columns("kinhto")
            Me.columnwebsite = Me.Columns("website")
            Me.columnΑριθμόςΦαξ = Me.Columns("ΑριθμόςΦαξ")
            Me.columnΑΦΜ = Me.Columns("ΑΦΜ")
            Me.columnΔιεύθυνσηEmail = Me.Columns("ΔιεύθυνσηEmail")
            Me.columnΔιεύθυνσηΧρέωσης = Me.Columns("ΔιεύθυνσηΧρέωσης")
            Me.columnΔΟΥ = Me.Columns("ΔΟΥ")
            Me.columnΕπάγγελμα = Me.Columns("Επάγγελμα")
            Me.columnΕπωνυμίαΕταιρείας = Me.Columns("ΕπωνυμίαΕταιρείας")
            Me.columnΕπώνυμοΕπαφής = Me.Columns("ΕπώνυμοΕπαφής")
            Me.columnΚωδΑγοραστή = Me.Columns("ΚωδΑγοραστή")
            Me.column_Νομός_Περιοχή = Me.Columns("Νομός/Περιοχή")
            Me.columnΌνομαΕπαφής = Me.Columns("ΌνομαΕπαφής")
            Me.columnΠόλη = Me.Columns("Πόλη")
            Me.columnΣημειώσεις = Me.Columns("Σημειώσεις")
            Me.columnΤαχυδρομικόςΚώδικας = Me.Columns("ΤαχυδρομικόςΚώδικας")
            Me.columnΤηλέφωνο = Me.Columns("Τηλέφωνο")
            Me.columnΤηλέφωνο1 = Me.Columns("Τηλέφωνο1")
            Me.column_Χώρα_Περιοχή = Me.Columns("Χώρα/Περιοχή")
        End Sub
        
        Private Sub InitClass()
            Me.columnkinhto = New DataColumn("kinhto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnkinhto)
            Me.columnwebsite = New DataColumn("website", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnwebsite)
            Me.columnΑριθμόςΦαξ = New DataColumn("ΑριθμόςΦαξ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΑριθμόςΦαξ)
            Me.columnΑΦΜ = New DataColumn("ΑΦΜ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΑΦΜ)
            Me.columnΔιεύθυνσηEmail = New DataColumn("ΔιεύθυνσηEmail", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔιεύθυνσηEmail)
            Me.columnΔιεύθυνσηΧρέωσης = New DataColumn("ΔιεύθυνσηΧρέωσης", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔιεύθυνσηΧρέωσης)
            Me.columnΔΟΥ = New DataColumn("ΔΟΥ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔΟΥ)
            Me.columnΕπάγγελμα = New DataColumn("Επάγγελμα", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπάγγελμα)
            Me.columnΕπωνυμίαΕταιρείας = New DataColumn("ΕπωνυμίαΕταιρείας", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπωνυμίαΕταιρείας)
            Me.columnΕπώνυμοΕπαφής = New DataColumn("ΕπώνυμοΕπαφής", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπώνυμοΕπαφής)
            Me.columnΚωδΑγοραστή = New DataColumn("ΚωδΑγοραστή", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΚωδΑγοραστή)
            Me.column_Νομός_Περιοχή = New DataColumn("Νομός/Περιοχή", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column_Νομός_Περιοχή)
            Me.columnΌνομαΕπαφής = New DataColumn("ΌνομαΕπαφής", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΌνομαΕπαφής)
            Me.columnΠόλη = New DataColumn("Πόλη", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠόλη)
            Me.columnΣημειώσεις = New DataColumn("Σημειώσεις", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΣημειώσεις)
            Me.columnΤαχυδρομικόςΚώδικας = New DataColumn("ΤαχυδρομικόςΚώδικας", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤαχυδρομικόςΚώδικας)
            Me.columnΤηλέφωνο = New DataColumn("Τηλέφωνο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤηλέφωνο)
            Me.columnΤηλέφωνο1 = New DataColumn("Τηλέφωνο1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤηλέφωνο1)
            Me.column_Χώρα_Περιοχή = New DataColumn("Χώρα/Περιοχή", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column_Χώρα_Περιοχή)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnΚωδΑγοραστή}, true))
            Me.columnΚωδΑγοραστή.AllowDBNull = false
            Me.columnΚωδΑγοραστή.Unique = true
        End Sub
        
        Public Function NewΠελατολόγιοRow() As ΠελατολόγιοRow
            Return CType(Me.NewRow,ΠελατολόγιοRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New ΠελατολόγιοRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(ΠελατολόγιοRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ΠελατολόγιοRowChangedEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowChanged(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ΠελατολόγιοRowChangingEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowChanging(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ΠελατολόγιοRowDeletedEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowDeleted(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ΠελατολόγιοRowDeletingEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowDeleting(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveΠελατολόγιοRow(ByVal row As ΠελατολόγιοRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠελατολόγιοRow
        Inherits DataRow
        
        Private tableΠελατολόγιο As ΠελατολόγιοDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableΠελατολόγιο = CType(Me.Table,ΠελατολόγιοDataTable)
        End Sub
        
        Public Property kinhto As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.kinhtoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.kinhtoColumn) = value
            End Set
        End Property
        
        Public Property website As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.websiteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.websiteColumn) = value
            End Set
        End Property
        
        Public Property ΑριθμόςΦαξ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn) = value
            End Set
        End Property
        
        Public Property ΑΦΜ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΑΦΜColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΑΦΜColumn) = value
            End Set
        End Property
        
        Public Property ΔιεύθυνσηEmail As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn) = value
            End Set
        End Property
        
        Public Property ΔιεύθυνσηΧρέωσης As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn) = value
            End Set
        End Property
        
        Public Property ΔΟΥ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΔΟΥColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΔΟΥColumn) = value
            End Set
        End Property
        
        Public Property Επάγγελμα As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΕπάγγελμαColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΕπάγγελμαColumn) = value
            End Set
        End Property
        
        Public Property ΕπωνυμίαΕταιρείας As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn) = value
            End Set
        End Property
        
        Public Property ΕπώνυμοΕπαφής As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn) = value
            End Set
        End Property
        
        Public Property ΚωδΑγοραστή As String
            Get
                Return CType(Me(Me.tableΠελατολόγιο.ΚωδΑγοραστήColumn),String)
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΚωδΑγοραστήColumn) = value
            End Set
        End Property
        
        Public Property _Νομός_Περιοχή As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn) = value
            End Set
        End Property
        
        Public Property ΌνομαΕπαφής As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn) = value
            End Set
        End Property
        
        Public Property Πόλη As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΠόληColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΠόληColumn) = value
            End Set
        End Property
        
        Public Property Σημειώσεις As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΣημειώσειςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΣημειώσειςColumn) = value
            End Set
        End Property
        
        Public Property ΤαχυδρομικόςΚώδικας As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn) = value
            End Set
        End Property
        
        Public Property Τηλέφωνο As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΤηλέφωνοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΤηλέφωνοColumn) = value
            End Set
        End Property
        
        Public Property Τηλέφωνο1 As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.Τηλέφωνο1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.Τηλέφωνο1Column) = value
            End Set
        End Property
        
        Public Property _Χώρα_Περιοχή As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn) = value
            End Set
        End Property
        
        Public Function IskinhtoNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.kinhtoColumn)
        End Function
        
        Public Sub SetkinhtoNull()
            Me(Me.tableΠελατολόγιο.kinhtoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IswebsiteNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.websiteColumn)
        End Function
        
        Public Sub SetwebsiteNull()
            Me(Me.tableΠελατολόγιο.websiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΑριθμόςΦαξNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn)
        End Function
        
        Public Sub SetΑριθμόςΦαξNull()
            Me(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΑΦΜNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΑΦΜColumn)
        End Function
        
        Public Sub SetΑΦΜNull()
            Me(Me.tableΠελατολόγιο.ΑΦΜColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔιεύθυνσηEmailNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn)
        End Function
        
        Public Sub SetΔιεύθυνσηEmailNull()
            Me(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔιεύθυνσηΧρέωσηςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn)
        End Function
        
        Public Sub SetΔιεύθυνσηΧρέωσηςNull()
            Me(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔΟΥNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΔΟΥColumn)
        End Function
        
        Public Sub SetΔΟΥNull()
            Me(Me.tableΠελατολόγιο.ΔΟΥColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπάγγελμαNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΕπάγγελμαColumn)
        End Function
        
        Public Sub SetΕπάγγελμαNull()
            Me(Me.tableΠελατολόγιο.ΕπάγγελμαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπωνυμίαΕταιρείαςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn)
        End Function
        
        Public Sub SetΕπωνυμίαΕταιρείαςNull()
            Me(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπώνυμοΕπαφήςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn)
        End Function
        
        Public Sub SetΕπώνυμοΕπαφήςNull()
            Me(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Is_Νομός_ΠεριοχήNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn)
        End Function
        
        Public Sub Set_Νομός_ΠεριοχήNull()
            Me(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΌνομαΕπαφήςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn)
        End Function
        
        Public Sub SetΌνομαΕπαφήςNull()
            Me(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠόληNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΠόληColumn)
        End Function
        
        Public Sub SetΠόληNull()
            Me(Me.tableΠελατολόγιο.ΠόληColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΣημειώσειςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΣημειώσειςColumn)
        End Function
        
        Public Sub SetΣημειώσειςNull()
            Me(Me.tableΠελατολόγιο.ΣημειώσειςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤαχυδρομικόςΚώδικαςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn)
        End Function
        
        Public Sub SetΤαχυδρομικόςΚώδικαςNull()
            Me(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤηλέφωνοNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΤηλέφωνοColumn)
        End Function
        
        Public Sub SetΤηλέφωνοNull()
            Me(Me.tableΠελατολόγιο.ΤηλέφωνοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤηλέφωνο1Null() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.Τηλέφωνο1Column)
        End Function
        
        Public Sub SetΤηλέφωνο1Null()
            Me(Me.tableΠελατολόγιο.Τηλέφωνο1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is_Χώρα_ΠεριοχήNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn)
        End Function
        
        Public Sub Set_Χώρα_ΠεριοχήNull()
            Me(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠελατολόγιοRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As ΠελατολόγιοRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As ΠελατολόγιοRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As ΠελατολόγιοRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
