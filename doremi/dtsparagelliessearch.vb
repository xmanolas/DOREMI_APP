'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dtsparagelliessearch
    Inherits DataSet
    
    Private tableΠαραγγελίες As ΠαραγγελίεςDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Παραγγελίες")) Is Nothing) Then
                Me.Tables.Add(New ΠαραγγελίεςDataTable(ds.Tables("Παραγγελίες")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Παραγγελίες As ΠαραγγελίεςDataTable
        Get
            Return Me.tableΠαραγγελίες
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dtsparagelliessearch = CType(MyBase.Clone,dtsparagelliessearch)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("Παραγγελίες")) Is Nothing) Then
            Me.Tables.Add(New ΠαραγγελίεςDataTable(ds.Tables("Παραγγελίες")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableΠαραγγελίες = CType(Me.Tables("Παραγγελίες"),ΠαραγγελίεςDataTable)
        If (Not (Me.tableΠαραγγελίες) Is Nothing) Then
            Me.tableΠαραγγελίες.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dtsparagelliessearch"
        Me.Prefix = ""
        Me.Namespace = "http://www.tempuri.org/dtsparagelliessearch.xsd"
        Me.Locale = New System.Globalization.CultureInfo("el-GR")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableΠαραγγελίες = New ΠαραγγελίεςDataTable
        Me.Tables.Add(Me.tableΠαραγγελίες)
    End Sub
    
    Private Function ShouldSerializeΠαραγγελίες() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub ΠαραγγελίεςRowChangeEventHandler(ByVal sender As Object, ByVal e As ΠαραγγελίεςRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠαραγγελίεςDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnISBN As DataColumn
        
        Private columnofferprice As DataColumn
        
        Private columnOrderNotes As DataColumn
        
        Private columnαρίθμησηεγγραφών As DataColumn
        
        Private columnΑΦΜ As DataColumn
        
        Private columnΔιεύθυνση As DataColumn
        
        Private columnΔΟΥ As DataColumn
        
        Private columnΈκδοση As DataColumn
        
        Private columnΕπάγγελμα As DataColumn
        
        Private columnΕπώνυμο As DataColumn
        
        Private columnΗμερομηνία As DataColumn
        
        Private columnΚινητό As DataColumn
        
        Private columnΚωδικός_Βιβλίου As DataColumn
        
        Private columnΟλοκληρώθηκε As DataColumn
        
        Private columnΌνομα As DataColumn
        
        Private columnΌργανο As DataColumn
        
        Private columnΠαράδοση As DataColumn
        
        Private columnΠοσότητα As DataColumn
        
        Private columnΣυγγραφέας As DataColumn
        
        Private columnΣυνθέτης As DataColumn
        
        Private columnΤηλέφωνο As DataColumn
        
        Private columnΤίτλος_Βιβλίου As DataColumn
        
        Friend Sub New()
            MyBase.New("Παραγγελίες")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property ISBNColumn As DataColumn
            Get
                Return Me.columnISBN
            End Get
        End Property
        
        Friend ReadOnly Property offerpriceColumn As DataColumn
            Get
                Return Me.columnofferprice
            End Get
        End Property
        
        Friend ReadOnly Property OrderNotesColumn As DataColumn
            Get
                Return Me.columnOrderNotes
            End Get
        End Property
        
        Friend ReadOnly Property αρίθμησηεγγραφώνColumn As DataColumn
            Get
                Return Me.columnαρίθμησηεγγραφών
            End Get
        End Property
        
        Friend ReadOnly Property ΑΦΜColumn As DataColumn
            Get
                Return Me.columnΑΦΜ
            End Get
        End Property
        
        Friend ReadOnly Property ΔιεύθυνσηColumn As DataColumn
            Get
                Return Me.columnΔιεύθυνση
            End Get
        End Property
        
        Friend ReadOnly Property ΔΟΥColumn As DataColumn
            Get
                Return Me.columnΔΟΥ
            End Get
        End Property
        
        Friend ReadOnly Property ΈκδοσηColumn As DataColumn
            Get
                Return Me.columnΈκδοση
            End Get
        End Property
        
        Friend ReadOnly Property ΕπάγγελμαColumn As DataColumn
            Get
                Return Me.columnΕπάγγελμα
            End Get
        End Property
        
        Friend ReadOnly Property ΕπώνυμοColumn As DataColumn
            Get
                Return Me.columnΕπώνυμο
            End Get
        End Property
        
        Friend ReadOnly Property ΗμερομηνίαColumn As DataColumn
            Get
                Return Me.columnΗμερομηνία
            End Get
        End Property
        
        Friend ReadOnly Property ΚινητόColumn As DataColumn
            Get
                Return Me.columnΚινητό
            End Get
        End Property
        
        Friend ReadOnly Property Κωδικός_ΒιβλίουColumn As DataColumn
            Get
                Return Me.columnΚωδικός_Βιβλίου
            End Get
        End Property
        
        Friend ReadOnly Property ΟλοκληρώθηκεColumn As DataColumn
            Get
                Return Me.columnΟλοκληρώθηκε
            End Get
        End Property
        
        Friend ReadOnly Property ΌνομαColumn As DataColumn
            Get
                Return Me.columnΌνομα
            End Get
        End Property
        
        Friend ReadOnly Property ΌργανοColumn As DataColumn
            Get
                Return Me.columnΌργανο
            End Get
        End Property
        
        Friend ReadOnly Property ΠαράδοσηColumn As DataColumn
            Get
                Return Me.columnΠαράδοση
            End Get
        End Property
        
        Friend ReadOnly Property ΠοσότηταColumn As DataColumn
            Get
                Return Me.columnΠοσότητα
            End Get
        End Property
        
        Friend ReadOnly Property ΣυγγραφέαςColumn As DataColumn
            Get
                Return Me.columnΣυγγραφέας
            End Get
        End Property
        
        Friend ReadOnly Property ΣυνθέτηςColumn As DataColumn
            Get
                Return Me.columnΣυνθέτης
            End Get
        End Property
        
        Friend ReadOnly Property ΤηλέφωνοColumn As DataColumn
            Get
                Return Me.columnΤηλέφωνο
            End Get
        End Property
        
        Friend ReadOnly Property Τίτλος_ΒιβλίουColumn As DataColumn
            Get
                Return Me.columnΤίτλος_Βιβλίου
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As ΠαραγγελίεςRow
            Get
                Return CType(Me.Rows(index),ΠαραγγελίεςRow)
            End Get
        End Property
        
        Public Event ΠαραγγελίεςRowChanged As ΠαραγγελίεςRowChangeEventHandler
        
        Public Event ΠαραγγελίεςRowChanging As ΠαραγγελίεςRowChangeEventHandler
        
        Public Event ΠαραγγελίεςRowDeleted As ΠαραγγελίεςRowChangeEventHandler
        
        Public Event ΠαραγγελίεςRowDeleting As ΠαραγγελίεςRowChangeEventHandler
        
        Public Overloads Sub AddΠαραγγελίεςRow(ByVal row As ΠαραγγελίεςRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddΠαραγγελίεςRow( _
                    ByVal ISBN As String,  _
                    ByVal offerprice As Integer,  _
                    ByVal OrderNotes As String,  _
                    ByVal ΑΦΜ As String,  _
                    ByVal Διεύθυνση As String,  _
                    ByVal ΔΟΥ As String,  _
                    ByVal Έκδοση As String,  _
                    ByVal Επάγγελμα As String,  _
                    ByVal Επώνυμο As String,  _
                    ByVal Ημερομηνία As Date,  _
                    ByVal Κινητό As String,  _
                    ByVal Κωδικός_Βιβλίου As String,  _
                    ByVal Ολοκληρώθηκε As String,  _
                    ByVal Όνομα As String,  _
                    ByVal Όργανο As String,  _
                    ByVal Παράδοση As String,  _
                    ByVal Ποσότητα As Integer,  _
                    ByVal Συγγραφέας As String,  _
                    ByVal Συνθέτης As String,  _
                    ByVal Τηλέφωνο As String,  _
                    ByVal Τίτλος_Βιβλίου As String) As ΠαραγγελίεςRow
            Dim rowΠαραγγελίεςRow As ΠαραγγελίεςRow = CType(Me.NewRow,ΠαραγγελίεςRow)
            rowΠαραγγελίεςRow.ItemArray = New Object() {ISBN, offerprice, OrderNotes, Nothing, ΑΦΜ, Διεύθυνση, ΔΟΥ, Έκδοση, Επάγγελμα, Επώνυμο, Ημερομηνία, Κινητό, Κωδικός_Βιβλίου, Ολοκληρώθηκε, Όνομα, Όργανο, Παράδοση, Ποσότητα, Συγγραφέας, Συνθέτης, Τηλέφωνο, Τίτλος_Βιβλίου}
            Me.Rows.Add(rowΠαραγγελίεςRow)
            Return rowΠαραγγελίεςRow
        End Function
        
        Public Function FindByαρίθμησηεγγραφών(ByVal αρίθμησηεγγραφών As Integer) As ΠαραγγελίεςRow
            Return CType(Me.Rows.Find(New Object() {αρίθμησηεγγραφών}),ΠαραγγελίεςRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As ΠαραγγελίεςDataTable = CType(MyBase.Clone,ΠαραγγελίεςDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New ΠαραγγελίεςDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnISBN = Me.Columns("ISBN")
            Me.columnofferprice = Me.Columns("offerprice")
            Me.columnOrderNotes = Me.Columns("OrderNotes")
            Me.columnαρίθμησηεγγραφών = Me.Columns("αρίθμησηεγγραφών")
            Me.columnΑΦΜ = Me.Columns("ΑΦΜ")
            Me.columnΔιεύθυνση = Me.Columns("Διεύθυνση")
            Me.columnΔΟΥ = Me.Columns("ΔΟΥ")
            Me.columnΈκδοση = Me.Columns("Έκδοση")
            Me.columnΕπάγγελμα = Me.Columns("Επάγγελμα")
            Me.columnΕπώνυμο = Me.Columns("Επώνυμο")
            Me.columnΗμερομηνία = Me.Columns("Ημερομηνία")
            Me.columnΚινητό = Me.Columns("Κινητό")
            Me.columnΚωδικός_Βιβλίου = Me.Columns("Κωδικός Βιβλίου")
            Me.columnΟλοκληρώθηκε = Me.Columns("Ολοκληρώθηκε")
            Me.columnΌνομα = Me.Columns("Όνομα")
            Me.columnΌργανο = Me.Columns("Όργανο")
            Me.columnΠαράδοση = Me.Columns("Παράδοση")
            Me.columnΠοσότητα = Me.Columns("Ποσότητα")
            Me.columnΣυγγραφέας = Me.Columns("Συγγραφέας")
            Me.columnΣυνθέτης = Me.Columns("Συνθέτης")
            Me.columnΤηλέφωνο = Me.Columns("Τηλέφωνο")
            Me.columnΤίτλος_Βιβλίου = Me.Columns("Τίτλος Βιβλίου")
        End Sub
        
        Private Sub InitClass()
            Me.columnISBN = New DataColumn("ISBN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnISBN)
            Me.columnofferprice = New DataColumn("offerprice", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnofferprice)
            Me.columnOrderNotes = New DataColumn("OrderNotes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOrderNotes)
            Me.columnαρίθμησηεγγραφών = New DataColumn("αρίθμησηεγγραφών", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnαρίθμησηεγγραφών)
            Me.columnΑΦΜ = New DataColumn("ΑΦΜ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΑΦΜ)
            Me.columnΔιεύθυνση = New DataColumn("Διεύθυνση", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔιεύθυνση)
            Me.columnΔΟΥ = New DataColumn("ΔΟΥ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔΟΥ)
            Me.columnΈκδοση = New DataColumn("Έκδοση", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΈκδοση)
            Me.columnΕπάγγελμα = New DataColumn("Επάγγελμα", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπάγγελμα)
            Me.columnΕπώνυμο = New DataColumn("Επώνυμο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπώνυμο)
            Me.columnΗμερομηνία = New DataColumn("Ημερομηνία", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΗμερομηνία)
            Me.columnΚινητό = New DataColumn("Κινητό", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΚινητό)
            Me.columnΚωδικός_Βιβλίου = New DataColumn("Κωδικός Βιβλίου", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΚωδικός_Βιβλίου)
            Me.columnΟλοκληρώθηκε = New DataColumn("Ολοκληρώθηκε", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΟλοκληρώθηκε)
            Me.columnΌνομα = New DataColumn("Όνομα", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΌνομα)
            Me.columnΌργανο = New DataColumn("Όργανο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΌργανο)
            Me.columnΠαράδοση = New DataColumn("Παράδοση", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠαράδοση)
            Me.columnΠοσότητα = New DataColumn("Ποσότητα", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠοσότητα)
            Me.columnΣυγγραφέας = New DataColumn("Συγγραφέας", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΣυγγραφέας)
            Me.columnΣυνθέτης = New DataColumn("Συνθέτης", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΣυνθέτης)
            Me.columnΤηλέφωνο = New DataColumn("Τηλέφωνο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤηλέφωνο)
            Me.columnΤίτλος_Βιβλίου = New DataColumn("Τίτλος Βιβλίου", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤίτλος_Βιβλίου)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnαρίθμησηεγγραφών}, true))
            Me.columnαρίθμησηεγγραφών.AutoIncrement = true
            Me.columnαρίθμησηεγγραφών.AllowDBNull = false
            Me.columnαρίθμησηεγγραφών.Unique = true
        End Sub
        
        Public Function NewΠαραγγελίεςRow() As ΠαραγγελίεςRow
            Return CType(Me.NewRow,ΠαραγγελίεςRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New ΠαραγγελίεςRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(ΠαραγγελίεςRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ΠαραγγελίεςRowChangedEvent) Is Nothing) Then
                RaiseEvent ΠαραγγελίεςRowChanged(Me, New ΠαραγγελίεςRowChangeEvent(CType(e.Row,ΠαραγγελίεςRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ΠαραγγελίεςRowChangingEvent) Is Nothing) Then
                RaiseEvent ΠαραγγελίεςRowChanging(Me, New ΠαραγγελίεςRowChangeEvent(CType(e.Row,ΠαραγγελίεςRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ΠαραγγελίεςRowDeletedEvent) Is Nothing) Then
                RaiseEvent ΠαραγγελίεςRowDeleted(Me, New ΠαραγγελίεςRowChangeEvent(CType(e.Row,ΠαραγγελίεςRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ΠαραγγελίεςRowDeletingEvent) Is Nothing) Then
                RaiseEvent ΠαραγγελίεςRowDeleting(Me, New ΠαραγγελίεςRowChangeEvent(CType(e.Row,ΠαραγγελίεςRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveΠαραγγελίεςRow(ByVal row As ΠαραγγελίεςRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠαραγγελίεςRow
        Inherits DataRow
        
        Private tableΠαραγγελίες As ΠαραγγελίεςDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableΠαραγγελίες = CType(Me.Table,ΠαραγγελίεςDataTable)
        End Sub
        
        Public Property ISBN As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ISBNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ISBNColumn) = value
            End Set
        End Property
        
        Public Property offerprice As Integer
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.offerpriceColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.offerpriceColumn) = value
            End Set
        End Property
        
        Public Property OrderNotes As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.OrderNotesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.OrderNotesColumn) = value
            End Set
        End Property
        
        Public Property αρίθμησηεγγραφών As Integer
            Get
                Return CType(Me(Me.tableΠαραγγελίες.αρίθμησηεγγραφώνColumn),Integer)
            End Get
            Set
                Me(Me.tableΠαραγγελίες.αρίθμησηεγγραφώνColumn) = value
            End Set
        End Property
        
        Public Property ΑΦΜ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΑΦΜColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΑΦΜColumn) = value
            End Set
        End Property
        
        Public Property Διεύθυνση As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΔιεύθυνσηColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΔιεύθυνσηColumn) = value
            End Set
        End Property
        
        Public Property ΔΟΥ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΔΟΥColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΔΟΥColumn) = value
            End Set
        End Property
        
        Public Property Έκδοση As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΈκδοσηColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΈκδοσηColumn) = value
            End Set
        End Property
        
        Public Property Επάγγελμα As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΕπάγγελμαColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΕπάγγελμαColumn) = value
            End Set
        End Property
        
        Public Property Επώνυμο As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΕπώνυμοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΕπώνυμοColumn) = value
            End Set
        End Property
        
        Public Property Ημερομηνία As Date
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΗμερομηνίαColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΗμερομηνίαColumn) = value
            End Set
        End Property
        
        Public Property Κινητό As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΚινητόColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΚινητόColumn) = value
            End Set
        End Property
        
        Public Property Κωδικός_Βιβλίου As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.Κωδικός_ΒιβλίουColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.Κωδικός_ΒιβλίουColumn) = value
            End Set
        End Property
        
        Public Property Ολοκληρώθηκε As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΟλοκληρώθηκεColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΟλοκληρώθηκεColumn) = value
            End Set
        End Property
        
        Public Property Όνομα As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΌνομαColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΌνομαColumn) = value
            End Set
        End Property
        
        Public Property Όργανο As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΌργανοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΌργανοColumn) = value
            End Set
        End Property
        
        Public Property Παράδοση As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΠαράδοσηColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΠαράδοσηColumn) = value
            End Set
        End Property
        
        Public Property Ποσότητα As Integer
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΠοσότηταColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΠοσότηταColumn) = value
            End Set
        End Property
        
        Public Property Συγγραφέας As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΣυγγραφέαςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΣυγγραφέαςColumn) = value
            End Set
        End Property
        
        Public Property Συνθέτης As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΣυνθέτηςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΣυνθέτηςColumn) = value
            End Set
        End Property
        
        Public Property Τηλέφωνο As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.ΤηλέφωνοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.ΤηλέφωνοColumn) = value
            End Set
        End Property
        
        Public Property Τίτλος_Βιβλίου As String
            Get
                Try 
                    Return CType(Me(Me.tableΠαραγγελίες.Τίτλος_ΒιβλίουColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠαραγγελίες.Τίτλος_ΒιβλίουColumn) = value
            End Set
        End Property
        
        Public Function IsISBNNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ISBNColumn)
        End Function
        
        Public Sub SetISBNNull()
            Me(Me.tableΠαραγγελίες.ISBNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsofferpriceNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.offerpriceColumn)
        End Function
        
        Public Sub SetofferpriceNull()
            Me(Me.tableΠαραγγελίες.offerpriceColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOrderNotesNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.OrderNotesColumn)
        End Function
        
        Public Sub SetOrderNotesNull()
            Me(Me.tableΠαραγγελίες.OrderNotesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΑΦΜNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΑΦΜColumn)
        End Function
        
        Public Sub SetΑΦΜNull()
            Me(Me.tableΠαραγγελίες.ΑΦΜColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔιεύθυνσηNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΔιεύθυνσηColumn)
        End Function
        
        Public Sub SetΔιεύθυνσηNull()
            Me(Me.tableΠαραγγελίες.ΔιεύθυνσηColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔΟΥNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΔΟΥColumn)
        End Function
        
        Public Sub SetΔΟΥNull()
            Me(Me.tableΠαραγγελίες.ΔΟΥColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΈκδοσηNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΈκδοσηColumn)
        End Function
        
        Public Sub SetΈκδοσηNull()
            Me(Me.tableΠαραγγελίες.ΈκδοσηColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπάγγελμαNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΕπάγγελμαColumn)
        End Function
        
        Public Sub SetΕπάγγελμαNull()
            Me(Me.tableΠαραγγελίες.ΕπάγγελμαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπώνυμοNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΕπώνυμοColumn)
        End Function
        
        Public Sub SetΕπώνυμοNull()
            Me(Me.tableΠαραγγελίες.ΕπώνυμοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΗμερομηνίαNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΗμερομηνίαColumn)
        End Function
        
        Public Sub SetΗμερομηνίαNull()
            Me(Me.tableΠαραγγελίες.ΗμερομηνίαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΚινητόNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΚινητόColumn)
        End Function
        
        Public Sub SetΚινητόNull()
            Me(Me.tableΠαραγγελίες.ΚινητόColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΚωδικός_ΒιβλίουNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.Κωδικός_ΒιβλίουColumn)
        End Function
        
        Public Sub SetΚωδικός_ΒιβλίουNull()
            Me(Me.tableΠαραγγελίες.Κωδικός_ΒιβλίουColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΟλοκληρώθηκεNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΟλοκληρώθηκεColumn)
        End Function
        
        Public Sub SetΟλοκληρώθηκεNull()
            Me(Me.tableΠαραγγελίες.ΟλοκληρώθηκεColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΌνομαNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΌνομαColumn)
        End Function
        
        Public Sub SetΌνομαNull()
            Me(Me.tableΠαραγγελίες.ΌνομαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΌργανοNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΌργανοColumn)
        End Function
        
        Public Sub SetΌργανοNull()
            Me(Me.tableΠαραγγελίες.ΌργανοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠαράδοσηNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΠαράδοσηColumn)
        End Function
        
        Public Sub SetΠαράδοσηNull()
            Me(Me.tableΠαραγγελίες.ΠαράδοσηColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠοσότηταNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΠοσότηταColumn)
        End Function
        
        Public Sub SetΠοσότηταNull()
            Me(Me.tableΠαραγγελίες.ΠοσότηταColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΣυγγραφέαςNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΣυγγραφέαςColumn)
        End Function
        
        Public Sub SetΣυγγραφέαςNull()
            Me(Me.tableΠαραγγελίες.ΣυγγραφέαςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΣυνθέτηςNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΣυνθέτηςColumn)
        End Function
        
        Public Sub SetΣυνθέτηςNull()
            Me(Me.tableΠαραγγελίες.ΣυνθέτηςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤηλέφωνοNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.ΤηλέφωνοColumn)
        End Function
        
        Public Sub SetΤηλέφωνοNull()
            Me(Me.tableΠαραγγελίες.ΤηλέφωνοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤίτλος_ΒιβλίουNull() As Boolean
            Return Me.IsNull(Me.tableΠαραγγελίες.Τίτλος_ΒιβλίουColumn)
        End Function
        
        Public Sub SetΤίτλος_ΒιβλίουNull()
            Me(Me.tableΠαραγγελίες.Τίτλος_ΒιβλίουColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠαραγγελίεςRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As ΠαραγγελίεςRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As ΠαραγγελίεςRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As ΠαραγγελίεςRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
