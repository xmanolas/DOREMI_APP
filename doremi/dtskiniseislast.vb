'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dtskiniseislast
    Inherits DataSet
    
    Private tabletblBooks As tblBooksDataTable
    
    Private tableΚινήσεις As ΚινήσειςDataTable
    
    Private tableΠελατολόγιο As ΠελατολόγιοDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tblBooks")) Is Nothing) Then
                Me.Tables.Add(New tblBooksDataTable(ds.Tables("tblBooks")))
            End If
            If (Not (ds.Tables("Κινήσεις")) Is Nothing) Then
                Me.Tables.Add(New ΚινήσειςDataTable(ds.Tables("Κινήσεις")))
            End If
            If (Not (ds.Tables("Πελατολόγιο")) Is Nothing) Then
                Me.Tables.Add(New ΠελατολόγιοDataTable(ds.Tables("Πελατολόγιο")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblBooks As tblBooksDataTable
        Get
            Return Me.tabletblBooks
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Κινήσεις As ΚινήσειςDataTable
        Get
            Return Me.tableΚινήσεις
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Πελατολόγιο As ΠελατολόγιοDataTable
        Get
            Return Me.tableΠελατολόγιο
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dtskiniseislast = CType(MyBase.Clone,dtskiniseislast)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("tblBooks")) Is Nothing) Then
            Me.Tables.Add(New tblBooksDataTable(ds.Tables("tblBooks")))
        End If
        If (Not (ds.Tables("Κινήσεις")) Is Nothing) Then
            Me.Tables.Add(New ΚινήσειςDataTable(ds.Tables("Κινήσεις")))
        End If
        If (Not (ds.Tables("Πελατολόγιο")) Is Nothing) Then
            Me.Tables.Add(New ΠελατολόγιοDataTable(ds.Tables("Πελατολόγιο")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tabletblBooks = CType(Me.Tables("tblBooks"),tblBooksDataTable)
        If (Not (Me.tabletblBooks) Is Nothing) Then
            Me.tabletblBooks.InitVars
        End If
        Me.tableΚινήσεις = CType(Me.Tables("Κινήσεις"),ΚινήσειςDataTable)
        If (Not (Me.tableΚινήσεις) Is Nothing) Then
            Me.tableΚινήσεις.InitVars
        End If
        Me.tableΠελατολόγιο = CType(Me.Tables("Πελατολόγιο"),ΠελατολόγιοDataTable)
        If (Not (Me.tableΠελατολόγιο) Is Nothing) Then
            Me.tableΠελατολόγιο.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dtskiniseislast"
        Me.Prefix = ""
        Me.Namespace = "http://www.tempuri.org/dtskiniseislast.xsd"
        Me.Locale = New System.Globalization.CultureInfo("el-GR")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tabletblBooks = New tblBooksDataTable
        Me.Tables.Add(Me.tabletblBooks)
        Me.tableΚινήσεις = New ΚινήσειςDataTable
        Me.Tables.Add(Me.tableΚινήσεις)
        Me.tableΠελατολόγιο = New ΠελατολόγιοDataTable
        Me.Tables.Add(Me.tableΠελατολόγιο)
    End Sub
    
    Private Function ShouldSerializetblBooks() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeΚινήσεις() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeΠελατολόγιο() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub tblBooksRowChangeEventHandler(ByVal sender As Object, ByVal e As tblBooksRowChangeEvent)
    
    Public Delegate Sub ΚινήσειςRowChangeEventHandler(ByVal sender As Object, ByVal e As ΚινήσειςRowChangeEvent)
    
    Public Delegate Sub ΠελατολόγιοRowChangeEventHandler(ByVal sender As Object, ByVal e As ΠελατολόγιοRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tblBooksDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnaa As DataColumn
        
        Private columnauthor As DataColumn
        
        Private columnbookcode As DataColumn
        
        Private columnbookordernumber As DataColumn
        
        Private columnbooktitle As DataColumn
        
        Private columncompocategory As DataColumn
        
        Private columncomposer As DataColumn
        
        Private columncompotitle As DataColumn
        
        Private columnedition As DataColumn
        
        Private columnepimelitis As DataColumn
        
        Private columnfpa As DataColumn
        
        Private columngeneralcode As DataColumn
        
        Private columngeneralcompotitle As DataColumn
        
        Private columnISBN As DataColumn
        
        Private columnISMN As DataColumn
        
        Private columnnotes As DataColumn
        
        Private columnorders As DataColumn
        
        Private columnquantity As DataColumn
        
        Private columnsubcompocategory As DataColumn
        
        Private columnsubcompocategory2 As DataColumn
        
        Private columnsupplier As DataColumn
        
        Private columntimiagoras As DataColumn
        
        Private columntimipolisis As DataColumn
        
        Private columnΠρομηθευτής2 As DataColumn
        
        Private columnΠρομηθευτής3 As DataColumn
        
        Friend Sub New()
            MyBase.New("tblBooks")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property aaColumn As DataColumn
            Get
                Return Me.columnaa
            End Get
        End Property
        
        Friend ReadOnly Property authorColumn As DataColumn
            Get
                Return Me.columnauthor
            End Get
        End Property
        
        Friend ReadOnly Property bookcodeColumn As DataColumn
            Get
                Return Me.columnbookcode
            End Get
        End Property
        
        Friend ReadOnly Property bookordernumberColumn As DataColumn
            Get
                Return Me.columnbookordernumber
            End Get
        End Property
        
        Friend ReadOnly Property booktitleColumn As DataColumn
            Get
                Return Me.columnbooktitle
            End Get
        End Property
        
        Friend ReadOnly Property compocategoryColumn As DataColumn
            Get
                Return Me.columncompocategory
            End Get
        End Property
        
        Friend ReadOnly Property composerColumn As DataColumn
            Get
                Return Me.columncomposer
            End Get
        End Property
        
        Friend ReadOnly Property compotitleColumn As DataColumn
            Get
                Return Me.columncompotitle
            End Get
        End Property
        
        Friend ReadOnly Property editionColumn As DataColumn
            Get
                Return Me.columnedition
            End Get
        End Property
        
        Friend ReadOnly Property epimelitisColumn As DataColumn
            Get
                Return Me.columnepimelitis
            End Get
        End Property
        
        Friend ReadOnly Property fpaColumn As DataColumn
            Get
                Return Me.columnfpa
            End Get
        End Property
        
        Friend ReadOnly Property generalcodeColumn As DataColumn
            Get
                Return Me.columngeneralcode
            End Get
        End Property
        
        Friend ReadOnly Property generalcompotitleColumn As DataColumn
            Get
                Return Me.columngeneralcompotitle
            End Get
        End Property
        
        Friend ReadOnly Property ISBNColumn As DataColumn
            Get
                Return Me.columnISBN
            End Get
        End Property
        
        Friend ReadOnly Property ISMNColumn As DataColumn
            Get
                Return Me.columnISMN
            End Get
        End Property
        
        Friend ReadOnly Property notesColumn As DataColumn
            Get
                Return Me.columnnotes
            End Get
        End Property
        
        Friend ReadOnly Property ordersColumn As DataColumn
            Get
                Return Me.columnorders
            End Get
        End Property
        
        Friend ReadOnly Property quantityColumn As DataColumn
            Get
                Return Me.columnquantity
            End Get
        End Property
        
        Friend ReadOnly Property subcompocategoryColumn As DataColumn
            Get
                Return Me.columnsubcompocategory
            End Get
        End Property
        
        Friend ReadOnly Property subcompocategory2Column As DataColumn
            Get
                Return Me.columnsubcompocategory2
            End Get
        End Property
        
        Friend ReadOnly Property supplierColumn As DataColumn
            Get
                Return Me.columnsupplier
            End Get
        End Property
        
        Friend ReadOnly Property timiagorasColumn As DataColumn
            Get
                Return Me.columntimiagoras
            End Get
        End Property
        
        Friend ReadOnly Property timipolisisColumn As DataColumn
            Get
                Return Me.columntimipolisis
            End Get
        End Property
        
        Friend ReadOnly Property Προμηθευτής2Column As DataColumn
            Get
                Return Me.columnΠρομηθευτής2
            End Get
        End Property
        
        Friend ReadOnly Property Προμηθευτής3Column As DataColumn
            Get
                Return Me.columnΠρομηθευτής3
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblBooksRow
            Get
                Return CType(Me.Rows(index),tblBooksRow)
            End Get
        End Property
        
        Public Event tblBooksRowChanged As tblBooksRowChangeEventHandler
        
        Public Event tblBooksRowChanging As tblBooksRowChangeEventHandler
        
        Public Event tblBooksRowDeleted As tblBooksRowChangeEventHandler
        
        Public Event tblBooksRowDeleting As tblBooksRowChangeEventHandler
        
        Public Overloads Sub AddtblBooksRow(ByVal row As tblBooksRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddtblBooksRow( _
                    ByVal author As String,  _
                    ByVal bookcode As String,  _
                    ByVal bookordernumber As String,  _
                    ByVal booktitle As String,  _
                    ByVal compocategory As String,  _
                    ByVal composer As String,  _
                    ByVal compotitle As String,  _
                    ByVal edition As String,  _
                    ByVal epimelitis As String,  _
                    ByVal fpa As String,  _
                    ByVal generalcode As String,  _
                    ByVal generalcompotitle As String,  _
                    ByVal ISBN As String,  _
                    ByVal ISMN As String,  _
                    ByVal notes As String,  _
                    ByVal orders As Integer,  _
                    ByVal quantity As Integer,  _
                    ByVal subcompocategory As String,  _
                    ByVal subcompocategory2 As String,  _
                    ByVal supplier As String,  _
                    ByVal timiagoras As String,  _
                    ByVal timipolisis As String,  _
                    ByVal Προμηθευτής2 As String,  _
                    ByVal Προμηθευτής3 As String) As tblBooksRow
            Dim rowtblBooksRow As tblBooksRow = CType(Me.NewRow,tblBooksRow)
            rowtblBooksRow.ItemArray = New Object() {Nothing, author, bookcode, bookordernumber, booktitle, compocategory, composer, compotitle, edition, epimelitis, fpa, generalcode, generalcompotitle, ISBN, ISMN, notes, orders, quantity, subcompocategory, subcompocategory2, supplier, timiagoras, timipolisis, Προμηθευτής2, Προμηθευτής3}
            Me.Rows.Add(rowtblBooksRow)
            Return rowtblBooksRow
        End Function
        
        Public Function FindByaageneralcode(ByVal aa As Integer, ByVal generalcode As String) As tblBooksRow
            Return CType(Me.Rows.Find(New Object() {aa, generalcode}),tblBooksRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tblBooksDataTable = CType(MyBase.Clone,tblBooksDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tblBooksDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnaa = Me.Columns("aa")
            Me.columnauthor = Me.Columns("author")
            Me.columnbookcode = Me.Columns("bookcode")
            Me.columnbookordernumber = Me.Columns("bookordernumber")
            Me.columnbooktitle = Me.Columns("booktitle")
            Me.columncompocategory = Me.Columns("compocategory")
            Me.columncomposer = Me.Columns("composer")
            Me.columncompotitle = Me.Columns("compotitle")
            Me.columnedition = Me.Columns("edition")
            Me.columnepimelitis = Me.Columns("epimelitis")
            Me.columnfpa = Me.Columns("fpa")
            Me.columngeneralcode = Me.Columns("generalcode")
            Me.columngeneralcompotitle = Me.Columns("generalcompotitle")
            Me.columnISBN = Me.Columns("ISBN")
            Me.columnISMN = Me.Columns("ISMN")
            Me.columnnotes = Me.Columns("notes")
            Me.columnorders = Me.Columns("orders")
            Me.columnquantity = Me.Columns("quantity")
            Me.columnsubcompocategory = Me.Columns("subcompocategory")
            Me.columnsubcompocategory2 = Me.Columns("subcompocategory2")
            Me.columnsupplier = Me.Columns("supplier")
            Me.columntimiagoras = Me.Columns("timiagoras")
            Me.columntimipolisis = Me.Columns("timipolisis")
            Me.columnΠρομηθευτής2 = Me.Columns("Προμηθευτής2")
            Me.columnΠρομηθευτής3 = Me.Columns("Προμηθευτής3")
        End Sub
        
        Private Sub InitClass()
            Me.columnaa = New DataColumn("aa", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnaa)
            Me.columnauthor = New DataColumn("author", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnauthor)
            Me.columnbookcode = New DataColumn("bookcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnbookcode)
            Me.columnbookordernumber = New DataColumn("bookordernumber", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnbookordernumber)
            Me.columnbooktitle = New DataColumn("booktitle", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnbooktitle)
            Me.columncompocategory = New DataColumn("compocategory", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncompocategory)
            Me.columncomposer = New DataColumn("composer", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncomposer)
            Me.columncompotitle = New DataColumn("compotitle", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncompotitle)
            Me.columnedition = New DataColumn("edition", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnedition)
            Me.columnepimelitis = New DataColumn("epimelitis", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnepimelitis)
            Me.columnfpa = New DataColumn("fpa", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfpa)
            Me.columngeneralcode = New DataColumn("generalcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columngeneralcode)
            Me.columngeneralcompotitle = New DataColumn("generalcompotitle", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columngeneralcompotitle)
            Me.columnISBN = New DataColumn("ISBN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnISBN)
            Me.columnISMN = New DataColumn("ISMN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnISMN)
            Me.columnnotes = New DataColumn("notes", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnnotes)
            Me.columnorders = New DataColumn("orders", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnorders)
            Me.columnquantity = New DataColumn("quantity", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnquantity)
            Me.columnsubcompocategory = New DataColumn("subcompocategory", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnsubcompocategory)
            Me.columnsubcompocategory2 = New DataColumn("subcompocategory2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnsubcompocategory2)
            Me.columnsupplier = New DataColumn("supplier", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnsupplier)
            Me.columntimiagoras = New DataColumn("timiagoras", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntimiagoras)
            Me.columntimipolisis = New DataColumn("timipolisis", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntimipolisis)
            Me.columnΠρομηθευτής2 = New DataColumn("Προμηθευτής2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠρομηθευτής2)
            Me.columnΠρομηθευτής3 = New DataColumn("Προμηθευτής3", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠρομηθευτής3)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnaa, Me.columngeneralcode}, true))
            Me.columnaa.AutoIncrement = true
            Me.columnaa.AllowDBNull = false
            Me.columngeneralcode.AllowDBNull = false
        End Sub
        
        Public Function NewtblBooksRow() As tblBooksRow
            Return CType(Me.NewRow,tblBooksRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tblBooksRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tblBooksRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblBooksRowChangedEvent) Is Nothing) Then
                RaiseEvent tblBooksRowChanged(Me, New tblBooksRowChangeEvent(CType(e.Row,tblBooksRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblBooksRowChangingEvent) Is Nothing) Then
                RaiseEvent tblBooksRowChanging(Me, New tblBooksRowChangeEvent(CType(e.Row,tblBooksRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblBooksRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblBooksRowDeleted(Me, New tblBooksRowChangeEvent(CType(e.Row,tblBooksRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblBooksRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblBooksRowDeleting(Me, New tblBooksRowChangeEvent(CType(e.Row,tblBooksRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovetblBooksRow(ByVal row As tblBooksRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tblBooksRow
        Inherits DataRow
        
        Private tabletblBooks As tblBooksDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblBooks = CType(Me.Table,tblBooksDataTable)
        End Sub
        
        Public Property aa As Integer
            Get
                Return CType(Me(Me.tabletblBooks.aaColumn),Integer)
            End Get
            Set
                Me(Me.tabletblBooks.aaColumn) = value
            End Set
        End Property
        
        Public Property author As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.authorColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.authorColumn) = value
            End Set
        End Property
        
        Public Property bookcode As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.bookcodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.bookcodeColumn) = value
            End Set
        End Property
        
        Public Property bookordernumber As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.bookordernumberColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.bookordernumberColumn) = value
            End Set
        End Property
        
        Public Property booktitle As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.booktitleColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.booktitleColumn) = value
            End Set
        End Property
        
        Public Property compocategory As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.compocategoryColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.compocategoryColumn) = value
            End Set
        End Property
        
        Public Property composer As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.composerColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.composerColumn) = value
            End Set
        End Property
        
        Public Property compotitle As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.compotitleColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.compotitleColumn) = value
            End Set
        End Property
        
        Public Property edition As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.editionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.editionColumn) = value
            End Set
        End Property
        
        Public Property epimelitis As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.epimelitisColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.epimelitisColumn) = value
            End Set
        End Property
        
        Public Property fpa As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.fpaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.fpaColumn) = value
            End Set
        End Property
        
        Public Property generalcode As String
            Get
                Return CType(Me(Me.tabletblBooks.generalcodeColumn),String)
            End Get
            Set
                Me(Me.tabletblBooks.generalcodeColumn) = value
            End Set
        End Property
        
        Public Property generalcompotitle As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.generalcompotitleColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.generalcompotitleColumn) = value
            End Set
        End Property
        
        Public Property ISBN As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.ISBNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.ISBNColumn) = value
            End Set
        End Property
        
        Public Property ISMN As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.ISMNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.ISMNColumn) = value
            End Set
        End Property
        
        Public Property notes As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.notesColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.notesColumn) = value
            End Set
        End Property
        
        Public Property orders As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.ordersColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.ordersColumn) = value
            End Set
        End Property
        
        Public Property quantity As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.quantityColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.quantityColumn) = value
            End Set
        End Property
        
        Public Property subcompocategory As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.subcompocategoryColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.subcompocategoryColumn) = value
            End Set
        End Property
        
        Public Property subcompocategory2 As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.subcompocategory2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.subcompocategory2Column) = value
            End Set
        End Property
        
        Public Property supplier As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.supplierColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.supplierColumn) = value
            End Set
        End Property
        
        Public Property timiagoras As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.timiagorasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.timiagorasColumn) = value
            End Set
        End Property
        
        Public Property timipolisis As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.timipolisisColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.timipolisisColumn) = value
            End Set
        End Property
        
        Public Property Προμηθευτής2 As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.Προμηθευτής2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.Προμηθευτής2Column) = value
            End Set
        End Property
        
        Public Property Προμηθευτής3 As String
            Get
                Try 
                    Return CType(Me(Me.tabletblBooks.Προμηθευτής3Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblBooks.Προμηθευτής3Column) = value
            End Set
        End Property
        
        Public Function IsauthorNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.authorColumn)
        End Function
        
        Public Sub SetauthorNull()
            Me(Me.tabletblBooks.authorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsbookcodeNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.bookcodeColumn)
        End Function
        
        Public Sub SetbookcodeNull()
            Me(Me.tabletblBooks.bookcodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsbookordernumberNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.bookordernumberColumn)
        End Function
        
        Public Sub SetbookordernumberNull()
            Me(Me.tabletblBooks.bookordernumberColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsbooktitleNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.booktitleColumn)
        End Function
        
        Public Sub SetbooktitleNull()
            Me(Me.tabletblBooks.booktitleColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscompocategoryNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.compocategoryColumn)
        End Function
        
        Public Sub SetcompocategoryNull()
            Me(Me.tabletblBooks.compocategoryColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscomposerNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.composerColumn)
        End Function
        
        Public Sub SetcomposerNull()
            Me(Me.tabletblBooks.composerColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IscompotitleNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.compotitleColumn)
        End Function
        
        Public Sub SetcompotitleNull()
            Me(Me.tabletblBooks.compotitleColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IseditionNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.editionColumn)
        End Function
        
        Public Sub SeteditionNull()
            Me(Me.tabletblBooks.editionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsepimelitisNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.epimelitisColumn)
        End Function
        
        Public Sub SetepimelitisNull()
            Me(Me.tabletblBooks.epimelitisColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfpaNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.fpaColumn)
        End Function
        
        Public Sub SetfpaNull()
            Me(Me.tabletblBooks.fpaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsgeneralcompotitleNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.generalcompotitleColumn)
        End Function
        
        Public Sub SetgeneralcompotitleNull()
            Me(Me.tabletblBooks.generalcompotitleColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsISBNNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.ISBNColumn)
        End Function
        
        Public Sub SetISBNNull()
            Me(Me.tabletblBooks.ISBNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsISMNNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.ISMNColumn)
        End Function
        
        Public Sub SetISMNNull()
            Me(Me.tabletblBooks.ISMNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsnotesNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.notesColumn)
        End Function
        
        Public Sub SetnotesNull()
            Me(Me.tabletblBooks.notesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsordersNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.ordersColumn)
        End Function
        
        Public Sub SetordersNull()
            Me(Me.tabletblBooks.ordersColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsquantityNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.quantityColumn)
        End Function
        
        Public Sub SetquantityNull()
            Me(Me.tabletblBooks.quantityColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IssubcompocategoryNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.subcompocategoryColumn)
        End Function
        
        Public Sub SetsubcompocategoryNull()
            Me(Me.tabletblBooks.subcompocategoryColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Issubcompocategory2Null() As Boolean
            Return Me.IsNull(Me.tabletblBooks.subcompocategory2Column)
        End Function
        
        Public Sub Setsubcompocategory2Null()
            Me(Me.tabletblBooks.subcompocategory2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IssupplierNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.supplierColumn)
        End Function
        
        Public Sub SetsupplierNull()
            Me(Me.tabletblBooks.supplierColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IstimiagorasNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.timiagorasColumn)
        End Function
        
        Public Sub SettimiagorasNull()
            Me(Me.tabletblBooks.timiagorasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IstimipolisisNull() As Boolean
            Return Me.IsNull(Me.tabletblBooks.timipolisisColumn)
        End Function
        
        Public Sub SettimipolisisNull()
            Me(Me.tabletblBooks.timipolisisColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠρομηθευτής2Null() As Boolean
            Return Me.IsNull(Me.tabletblBooks.Προμηθευτής2Column)
        End Function
        
        Public Sub SetΠρομηθευτής2Null()
            Me(Me.tabletblBooks.Προμηθευτής2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠρομηθευτής3Null() As Boolean
            Return Me.IsNull(Me.tabletblBooks.Προμηθευτής3Column)
        End Function
        
        Public Sub SetΠρομηθευτής3Null()
            Me(Me.tabletblBooks.Προμηθευτής3Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tblBooksRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tblBooksRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tblBooksRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tblBooksRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΚινήσειςDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnISBN As DataColumn
        
        Private columnαρίθμησηεγγραφών As DataColumn
        
        Private columnΑΦΜ As DataColumn
        
        Private columnΔιεύθυνση As DataColumn
        
        Private columnΔΟΥ As DataColumn
        
        Private columnΈκδοση As DataColumn
        
        Private columnΕπάγγελμα As DataColumn
        
        Private columnΕπώνυμο As DataColumn
        
        Private columnΗμερομηνία As DataColumn
        
        Private columnΚινητό As DataColumn
        
        Private columnΚωδικός_Βιβλίου As DataColumn
        
        Private columnΌνομα As DataColumn
        
        Private columnΌργανο As DataColumn
        
        Private columnΠοσότητα As DataColumn
        
        Private columnΣυγγραφέας As DataColumn
        
        Private columnΣυνθέτης As DataColumn
        
        Private columnΤηλέφωνο As DataColumn
        
        Private columnΤιμή_Προσφοράς As DataColumn
        
        Private columnΤίτλος_Βιβλίου As DataColumn
        
        Friend Sub New()
            MyBase.New("Κινήσεις")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property ISBNColumn As DataColumn
            Get
                Return Me.columnISBN
            End Get
        End Property
        
        Friend ReadOnly Property αρίθμησηεγγραφώνColumn As DataColumn
            Get
                Return Me.columnαρίθμησηεγγραφών
            End Get
        End Property
        
        Friend ReadOnly Property ΑΦΜColumn As DataColumn
            Get
                Return Me.columnΑΦΜ
            End Get
        End Property
        
        Friend ReadOnly Property ΔιεύθυνσηColumn As DataColumn
            Get
                Return Me.columnΔιεύθυνση
            End Get
        End Property
        
        Friend ReadOnly Property ΔΟΥColumn As DataColumn
            Get
                Return Me.columnΔΟΥ
            End Get
        End Property
        
        Friend ReadOnly Property ΈκδοσηColumn As DataColumn
            Get
                Return Me.columnΈκδοση
            End Get
        End Property
        
        Friend ReadOnly Property ΕπάγγελμαColumn As DataColumn
            Get
                Return Me.columnΕπάγγελμα
            End Get
        End Property
        
        Friend ReadOnly Property ΕπώνυμοColumn As DataColumn
            Get
                Return Me.columnΕπώνυμο
            End Get
        End Property
        
        Friend ReadOnly Property ΗμερομηνίαColumn As DataColumn
            Get
                Return Me.columnΗμερομηνία
            End Get
        End Property
        
        Friend ReadOnly Property ΚινητόColumn As DataColumn
            Get
                Return Me.columnΚινητό
            End Get
        End Property
        
        Friend ReadOnly Property Κωδικός_ΒιβλίουColumn As DataColumn
            Get
                Return Me.columnΚωδικός_Βιβλίου
            End Get
        End Property
        
        Friend ReadOnly Property ΌνομαColumn As DataColumn
            Get
                Return Me.columnΌνομα
            End Get
        End Property
        
        Friend ReadOnly Property ΌργανοColumn As DataColumn
            Get
                Return Me.columnΌργανο
            End Get
        End Property
        
        Friend ReadOnly Property ΠοσότηταColumn As DataColumn
            Get
                Return Me.columnΠοσότητα
            End Get
        End Property
        
        Friend ReadOnly Property ΣυγγραφέαςColumn As DataColumn
            Get
                Return Me.columnΣυγγραφέας
            End Get
        End Property
        
        Friend ReadOnly Property ΣυνθέτηςColumn As DataColumn
            Get
                Return Me.columnΣυνθέτης
            End Get
        End Property
        
        Friend ReadOnly Property ΤηλέφωνοColumn As DataColumn
            Get
                Return Me.columnΤηλέφωνο
            End Get
        End Property
        
        Friend ReadOnly Property Τιμή_ΠροσφοράςColumn As DataColumn
            Get
                Return Me.columnΤιμή_Προσφοράς
            End Get
        End Property
        
        Friend ReadOnly Property Τίτλος_ΒιβλίουColumn As DataColumn
            Get
                Return Me.columnΤίτλος_Βιβλίου
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As ΚινήσειςRow
            Get
                Return CType(Me.Rows(index),ΚινήσειςRow)
            End Get
        End Property
        
        Public Event ΚινήσειςRowChanged As ΚινήσειςRowChangeEventHandler
        
        Public Event ΚινήσειςRowChanging As ΚινήσειςRowChangeEventHandler
        
        Public Event ΚινήσειςRowDeleted As ΚινήσειςRowChangeEventHandler
        
        Public Event ΚινήσειςRowDeleting As ΚινήσειςRowChangeEventHandler
        
        Public Overloads Sub AddΚινήσειςRow(ByVal row As ΚινήσειςRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddΚινήσειςRow( _
                    ByVal ISBN As String,  _
                    ByVal ΑΦΜ As String,  _
                    ByVal Διεύθυνση As String,  _
                    ByVal ΔΟΥ As String,  _
                    ByVal Έκδοση As String,  _
                    ByVal Επάγγελμα As String,  _
                    ByVal Επώνυμο As String,  _
                    ByVal Ημερομηνία As Date,  _
                    ByVal Κινητό As String,  _
                    ByVal Κωδικός_Βιβλίου As String,  _
                    ByVal Όνομα As String,  _
                    ByVal Όργανο As String,  _
                    ByVal Ποσότητα As Integer,  _
                    ByVal Συγγραφέας As String,  _
                    ByVal Συνθέτης As String,  _
                    ByVal Τηλέφωνο As String,  _
                    ByVal Τιμή_Προσφοράς As Single,  _
                    ByVal Τίτλος_Βιβλίου As String) As ΚινήσειςRow
            Dim rowΚινήσειςRow As ΚινήσειςRow = CType(Me.NewRow,ΚινήσειςRow)
            rowΚινήσειςRow.ItemArray = New Object() {ISBN, Nothing, ΑΦΜ, Διεύθυνση, ΔΟΥ, Έκδοση, Επάγγελμα, Επώνυμο, Ημερομηνία, Κινητό, Κωδικός_Βιβλίου, Όνομα, Όργανο, Ποσότητα, Συγγραφέας, Συνθέτης, Τηλέφωνο, Τιμή_Προσφοράς, Τίτλος_Βιβλίου}
            Me.Rows.Add(rowΚινήσειςRow)
            Return rowΚινήσειςRow
        End Function
        
        Public Function FindByαρίθμησηεγγραφών(ByVal αρίθμησηεγγραφών As Integer) As ΚινήσειςRow
            Return CType(Me.Rows.Find(New Object() {αρίθμησηεγγραφών}),ΚινήσειςRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As ΚινήσειςDataTable = CType(MyBase.Clone,ΚινήσειςDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New ΚινήσειςDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnISBN = Me.Columns("ISBN")
            Me.columnαρίθμησηεγγραφών = Me.Columns("αρίθμησηεγγραφών")
            Me.columnΑΦΜ = Me.Columns("ΑΦΜ")
            Me.columnΔιεύθυνση = Me.Columns("Διεύθυνση")
            Me.columnΔΟΥ = Me.Columns("ΔΟΥ")
            Me.columnΈκδοση = Me.Columns("Έκδοση")
            Me.columnΕπάγγελμα = Me.Columns("Επάγγελμα")
            Me.columnΕπώνυμο = Me.Columns("Επώνυμο")
            Me.columnΗμερομηνία = Me.Columns("Ημερομηνία")
            Me.columnΚινητό = Me.Columns("Κινητό")
            Me.columnΚωδικός_Βιβλίου = Me.Columns("Κωδικός Βιβλίου")
            Me.columnΌνομα = Me.Columns("Όνομα")
            Me.columnΌργανο = Me.Columns("Όργανο")
            Me.columnΠοσότητα = Me.Columns("Ποσότητα")
            Me.columnΣυγγραφέας = Me.Columns("Συγγραφέας")
            Me.columnΣυνθέτης = Me.Columns("Συνθέτης")
            Me.columnΤηλέφωνο = Me.Columns("Τηλέφωνο")
            Me.columnΤιμή_Προσφοράς = Me.Columns("Τιμή Προσφοράς")
            Me.columnΤίτλος_Βιβλίου = Me.Columns("Τίτλος Βιβλίου")
        End Sub
        
        Private Sub InitClass()
            Me.columnISBN = New DataColumn("ISBN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnISBN)
            Me.columnαρίθμησηεγγραφών = New DataColumn("αρίθμησηεγγραφών", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnαρίθμησηεγγραφών)
            Me.columnΑΦΜ = New DataColumn("ΑΦΜ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΑΦΜ)
            Me.columnΔιεύθυνση = New DataColumn("Διεύθυνση", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔιεύθυνση)
            Me.columnΔΟΥ = New DataColumn("ΔΟΥ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔΟΥ)
            Me.columnΈκδοση = New DataColumn("Έκδοση", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΈκδοση)
            Me.columnΕπάγγελμα = New DataColumn("Επάγγελμα", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπάγγελμα)
            Me.columnΕπώνυμο = New DataColumn("Επώνυμο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπώνυμο)
            Me.columnΗμερομηνία = New DataColumn("Ημερομηνία", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΗμερομηνία)
            Me.columnΚινητό = New DataColumn("Κινητό", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΚινητό)
            Me.columnΚωδικός_Βιβλίου = New DataColumn("Κωδικός Βιβλίου", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΚωδικός_Βιβλίου)
            Me.columnΌνομα = New DataColumn("Όνομα", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΌνομα)
            Me.columnΌργανο = New DataColumn("Όργανο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΌργανο)
            Me.columnΠοσότητα = New DataColumn("Ποσότητα", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠοσότητα)
            Me.columnΣυγγραφέας = New DataColumn("Συγγραφέας", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΣυγγραφέας)
            Me.columnΣυνθέτης = New DataColumn("Συνθέτης", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΣυνθέτης)
            Me.columnΤηλέφωνο = New DataColumn("Τηλέφωνο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤηλέφωνο)
            Me.columnΤιμή_Προσφοράς = New DataColumn("Τιμή Προσφοράς", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤιμή_Προσφοράς)
            Me.columnΤίτλος_Βιβλίου = New DataColumn("Τίτλος Βιβλίου", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤίτλος_Βιβλίου)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnαρίθμησηεγγραφών}, true))
            Me.columnαρίθμησηεγγραφών.AutoIncrement = true
            Me.columnαρίθμησηεγγραφών.AllowDBNull = false
            Me.columnαρίθμησηεγγραφών.Unique = true
        End Sub
        
        Public Function NewΚινήσειςRow() As ΚινήσειςRow
            Return CType(Me.NewRow,ΚινήσειςRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New ΚινήσειςRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(ΚινήσειςRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ΚινήσειςRowChangedEvent) Is Nothing) Then
                RaiseEvent ΚινήσειςRowChanged(Me, New ΚινήσειςRowChangeEvent(CType(e.Row,ΚινήσειςRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ΚινήσειςRowChangingEvent) Is Nothing) Then
                RaiseEvent ΚινήσειςRowChanging(Me, New ΚινήσειςRowChangeEvent(CType(e.Row,ΚινήσειςRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ΚινήσειςRowDeletedEvent) Is Nothing) Then
                RaiseEvent ΚινήσειςRowDeleted(Me, New ΚινήσειςRowChangeEvent(CType(e.Row,ΚινήσειςRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ΚινήσειςRowDeletingEvent) Is Nothing) Then
                RaiseEvent ΚινήσειςRowDeleting(Me, New ΚινήσειςRowChangeEvent(CType(e.Row,ΚινήσειςRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveΚινήσειςRow(ByVal row As ΚινήσειςRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΚινήσειςRow
        Inherits DataRow
        
        Private tableΚινήσεις As ΚινήσειςDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableΚινήσεις = CType(Me.Table,ΚινήσειςDataTable)
        End Sub
        
        Public Property ISBN As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ISBNColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ISBNColumn) = value
            End Set
        End Property
        
        Public Property αρίθμησηεγγραφών As Integer
            Get
                Return CType(Me(Me.tableΚινήσεις.αρίθμησηεγγραφώνColumn),Integer)
            End Get
            Set
                Me(Me.tableΚινήσεις.αρίθμησηεγγραφώνColumn) = value
            End Set
        End Property
        
        Public Property ΑΦΜ As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΑΦΜColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΑΦΜColumn) = value
            End Set
        End Property
        
        Public Property Διεύθυνση As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΔιεύθυνσηColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΔιεύθυνσηColumn) = value
            End Set
        End Property
        
        Public Property ΔΟΥ As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΔΟΥColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΔΟΥColumn) = value
            End Set
        End Property
        
        Public Property Έκδοση As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΈκδοσηColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΈκδοσηColumn) = value
            End Set
        End Property
        
        Public Property Επάγγελμα As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΕπάγγελμαColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΕπάγγελμαColumn) = value
            End Set
        End Property
        
        Public Property Επώνυμο As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΕπώνυμοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΕπώνυμοColumn) = value
            End Set
        End Property
        
        Public Property Ημερομηνία As Date
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΗμερομηνίαColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΗμερομηνίαColumn) = value
            End Set
        End Property
        
        Public Property Κινητό As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΚινητόColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΚινητόColumn) = value
            End Set
        End Property
        
        Public Property Κωδικός_Βιβλίου As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.Κωδικός_ΒιβλίουColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.Κωδικός_ΒιβλίουColumn) = value
            End Set
        End Property
        
        Public Property Όνομα As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΌνομαColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΌνομαColumn) = value
            End Set
        End Property
        
        Public Property Όργανο As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΌργανοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΌργανοColumn) = value
            End Set
        End Property
        
        Public Property Ποσότητα As Integer
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΠοσότηταColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΠοσότηταColumn) = value
            End Set
        End Property
        
        Public Property Συγγραφέας As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΣυγγραφέαςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΣυγγραφέαςColumn) = value
            End Set
        End Property
        
        Public Property Συνθέτης As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΣυνθέτηςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΣυνθέτηςColumn) = value
            End Set
        End Property
        
        Public Property Τηλέφωνο As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.ΤηλέφωνοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.ΤηλέφωνοColumn) = value
            End Set
        End Property
        
        Public Property Τιμή_Προσφοράς As Single
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.Τιμή_ΠροσφοράςColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.Τιμή_ΠροσφοράςColumn) = value
            End Set
        End Property
        
        Public Property Τίτλος_Βιβλίου As String
            Get
                Try 
                    Return CType(Me(Me.tableΚινήσεις.Τίτλος_ΒιβλίουColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΚινήσεις.Τίτλος_ΒιβλίουColumn) = value
            End Set
        End Property
        
        Public Function IsISBNNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ISBNColumn)
        End Function
        
        Public Sub SetISBNNull()
            Me(Me.tableΚινήσεις.ISBNColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΑΦΜNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΑΦΜColumn)
        End Function
        
        Public Sub SetΑΦΜNull()
            Me(Me.tableΚινήσεις.ΑΦΜColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔιεύθυνσηNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΔιεύθυνσηColumn)
        End Function
        
        Public Sub SetΔιεύθυνσηNull()
            Me(Me.tableΚινήσεις.ΔιεύθυνσηColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔΟΥNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΔΟΥColumn)
        End Function
        
        Public Sub SetΔΟΥNull()
            Me(Me.tableΚινήσεις.ΔΟΥColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΈκδοσηNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΈκδοσηColumn)
        End Function
        
        Public Sub SetΈκδοσηNull()
            Me(Me.tableΚινήσεις.ΈκδοσηColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπάγγελμαNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΕπάγγελμαColumn)
        End Function
        
        Public Sub SetΕπάγγελμαNull()
            Me(Me.tableΚινήσεις.ΕπάγγελμαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπώνυμοNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΕπώνυμοColumn)
        End Function
        
        Public Sub SetΕπώνυμοNull()
            Me(Me.tableΚινήσεις.ΕπώνυμοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΗμερομηνίαNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΗμερομηνίαColumn)
        End Function
        
        Public Sub SetΗμερομηνίαNull()
            Me(Me.tableΚινήσεις.ΗμερομηνίαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΚινητόNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΚινητόColumn)
        End Function
        
        Public Sub SetΚινητόNull()
            Me(Me.tableΚινήσεις.ΚινητόColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΚωδικός_ΒιβλίουNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.Κωδικός_ΒιβλίουColumn)
        End Function
        
        Public Sub SetΚωδικός_ΒιβλίουNull()
            Me(Me.tableΚινήσεις.Κωδικός_ΒιβλίουColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΌνομαNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΌνομαColumn)
        End Function
        
        Public Sub SetΌνομαNull()
            Me(Me.tableΚινήσεις.ΌνομαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΌργανοNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΌργανοColumn)
        End Function
        
        Public Sub SetΌργανοNull()
            Me(Me.tableΚινήσεις.ΌργανοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠοσότηταNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΠοσότηταColumn)
        End Function
        
        Public Sub SetΠοσότηταNull()
            Me(Me.tableΚινήσεις.ΠοσότηταColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΣυγγραφέαςNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΣυγγραφέαςColumn)
        End Function
        
        Public Sub SetΣυγγραφέαςNull()
            Me(Me.tableΚινήσεις.ΣυγγραφέαςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΣυνθέτηςNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΣυνθέτηςColumn)
        End Function
        
        Public Sub SetΣυνθέτηςNull()
            Me(Me.tableΚινήσεις.ΣυνθέτηςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤηλέφωνοNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.ΤηλέφωνοColumn)
        End Function
        
        Public Sub SetΤηλέφωνοNull()
            Me(Me.tableΚινήσεις.ΤηλέφωνοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤιμή_ΠροσφοράςNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.Τιμή_ΠροσφοράςColumn)
        End Function
        
        Public Sub SetΤιμή_ΠροσφοράςNull()
            Me(Me.tableΚινήσεις.Τιμή_ΠροσφοράςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤίτλος_ΒιβλίουNull() As Boolean
            Return Me.IsNull(Me.tableΚινήσεις.Τίτλος_ΒιβλίουColumn)
        End Function
        
        Public Sub SetΤίτλος_ΒιβλίουNull()
            Me(Me.tableΚινήσεις.Τίτλος_ΒιβλίουColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΚινήσειςRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As ΚινήσειςRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As ΚινήσειςRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As ΚινήσειςRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠελατολόγιοDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnkinhto As DataColumn
        
        Private columnwebsite As DataColumn
        
        Private columnΑριθμόςΦαξ As DataColumn
        
        Private columnΑΦΜ As DataColumn
        
        Private columnΔιεύθυνσηEmail As DataColumn
        
        Private columnΔιεύθυνσηΧρέωσης As DataColumn
        
        Private columnΔΟΥ As DataColumn
        
        Private columnΕπάγγελμα As DataColumn
        
        Private columnΕπωνυμίαΕταιρείας As DataColumn
        
        Private columnΕπώνυμοΕπαφής As DataColumn
        
        Private columnΚωδΑγοραστή As DataColumn
        
        Private column_Νομός_Περιοχή As DataColumn
        
        Private columnΌνομαΕπαφής As DataColumn
        
        Private columnΠόλη As DataColumn
        
        Private columnΣημειώσεις As DataColumn
        
        Private columnΤαχυδρομικόςΚώδικας As DataColumn
        
        Private columnΤηλέφωνο As DataColumn
        
        Private columnΤηλέφωνο1 As DataColumn
        
        Private column_Χώρα_Περιοχή As DataColumn
        
        Friend Sub New()
            MyBase.New("Πελατολόγιο")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property kinhtoColumn As DataColumn
            Get
                Return Me.columnkinhto
            End Get
        End Property
        
        Friend ReadOnly Property websiteColumn As DataColumn
            Get
                Return Me.columnwebsite
            End Get
        End Property
        
        Friend ReadOnly Property ΑριθμόςΦαξColumn As DataColumn
            Get
                Return Me.columnΑριθμόςΦαξ
            End Get
        End Property
        
        Friend ReadOnly Property ΑΦΜColumn As DataColumn
            Get
                Return Me.columnΑΦΜ
            End Get
        End Property
        
        Friend ReadOnly Property ΔιεύθυνσηEmailColumn As DataColumn
            Get
                Return Me.columnΔιεύθυνσηEmail
            End Get
        End Property
        
        Friend ReadOnly Property ΔιεύθυνσηΧρέωσηςColumn As DataColumn
            Get
                Return Me.columnΔιεύθυνσηΧρέωσης
            End Get
        End Property
        
        Friend ReadOnly Property ΔΟΥColumn As DataColumn
            Get
                Return Me.columnΔΟΥ
            End Get
        End Property
        
        Friend ReadOnly Property ΕπάγγελμαColumn As DataColumn
            Get
                Return Me.columnΕπάγγελμα
            End Get
        End Property
        
        Friend ReadOnly Property ΕπωνυμίαΕταιρείαςColumn As DataColumn
            Get
                Return Me.columnΕπωνυμίαΕταιρείας
            End Get
        End Property
        
        Friend ReadOnly Property ΕπώνυμοΕπαφήςColumn As DataColumn
            Get
                Return Me.columnΕπώνυμοΕπαφής
            End Get
        End Property
        
        Friend ReadOnly Property ΚωδΑγοραστήColumn As DataColumn
            Get
                Return Me.columnΚωδΑγοραστή
            End Get
        End Property
        
        Friend ReadOnly Property _Νομός_ΠεριοχήColumn As DataColumn
            Get
                Return Me.column_Νομός_Περιοχή
            End Get
        End Property
        
        Friend ReadOnly Property ΌνομαΕπαφήςColumn As DataColumn
            Get
                Return Me.columnΌνομαΕπαφής
            End Get
        End Property
        
        Friend ReadOnly Property ΠόληColumn As DataColumn
            Get
                Return Me.columnΠόλη
            End Get
        End Property
        
        Friend ReadOnly Property ΣημειώσειςColumn As DataColumn
            Get
                Return Me.columnΣημειώσεις
            End Get
        End Property
        
        Friend ReadOnly Property ΤαχυδρομικόςΚώδικαςColumn As DataColumn
            Get
                Return Me.columnΤαχυδρομικόςΚώδικας
            End Get
        End Property
        
        Friend ReadOnly Property ΤηλέφωνοColumn As DataColumn
            Get
                Return Me.columnΤηλέφωνο
            End Get
        End Property
        
        Friend ReadOnly Property Τηλέφωνο1Column As DataColumn
            Get
                Return Me.columnΤηλέφωνο1
            End Get
        End Property
        
        Friend ReadOnly Property _Χώρα_ΠεριοχήColumn As DataColumn
            Get
                Return Me.column_Χώρα_Περιοχή
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As ΠελατολόγιοRow
            Get
                Return CType(Me.Rows(index),ΠελατολόγιοRow)
            End Get
        End Property
        
        Public Event ΠελατολόγιοRowChanged As ΠελατολόγιοRowChangeEventHandler
        
        Public Event ΠελατολόγιοRowChanging As ΠελατολόγιοRowChangeEventHandler
        
        Public Event ΠελατολόγιοRowDeleted As ΠελατολόγιοRowChangeEventHandler
        
        Public Event ΠελατολόγιοRowDeleting As ΠελατολόγιοRowChangeEventHandler
        
        Public Overloads Sub AddΠελατολόγιοRow(ByVal row As ΠελατολόγιοRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddΠελατολόγιοRow( _
                    ByVal kinhto As String,  _
                    ByVal website As String,  _
                    ByVal ΑριθμόςΦαξ As String,  _
                    ByVal ΑΦΜ As String,  _
                    ByVal ΔιεύθυνσηEmail As String,  _
                    ByVal ΔιεύθυνσηΧρέωσης As String,  _
                    ByVal ΔΟΥ As String,  _
                    ByVal Επάγγελμα As String,  _
                    ByVal ΕπωνυμίαΕταιρείας As String,  _
                    ByVal ΕπώνυμοΕπαφής As String,  _
                    ByVal ΚωδΑγοραστή As String,  _
                    ByVal _Νομός_Περιοχή As String,  _
                    ByVal ΌνομαΕπαφής As String,  _
                    ByVal Πόλη As String,  _
                    ByVal Σημειώσεις As String,  _
                    ByVal ΤαχυδρομικόςΚώδικας As String,  _
                    ByVal Τηλέφωνο As String,  _
                    ByVal Τηλέφωνο1 As String,  _
                    ByVal _Χώρα_Περιοχή As String) As ΠελατολόγιοRow
            Dim rowΠελατολόγιοRow As ΠελατολόγιοRow = CType(Me.NewRow,ΠελατολόγιοRow)
            rowΠελατολόγιοRow.ItemArray = New Object() {kinhto, website, ΑριθμόςΦαξ, ΑΦΜ, ΔιεύθυνσηEmail, ΔιεύθυνσηΧρέωσης, ΔΟΥ, Επάγγελμα, ΕπωνυμίαΕταιρείας, ΕπώνυμοΕπαφής, ΚωδΑγοραστή, _Νομός_Περιοχή, ΌνομαΕπαφής, Πόλη, Σημειώσεις, ΤαχυδρομικόςΚώδικας, Τηλέφωνο, Τηλέφωνο1, _Χώρα_Περιοχή}
            Me.Rows.Add(rowΠελατολόγιοRow)
            Return rowΠελατολόγιοRow
        End Function
        
        Public Function FindByΚωδΑγοραστή(ByVal ΚωδΑγοραστή As String) As ΠελατολόγιοRow
            Return CType(Me.Rows.Find(New Object() {ΚωδΑγοραστή}),ΠελατολόγιοRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As ΠελατολόγιοDataTable = CType(MyBase.Clone,ΠελατολόγιοDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New ΠελατολόγιοDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnkinhto = Me.Columns("kinhto")
            Me.columnwebsite = Me.Columns("website")
            Me.columnΑριθμόςΦαξ = Me.Columns("ΑριθμόςΦαξ")
            Me.columnΑΦΜ = Me.Columns("ΑΦΜ")
            Me.columnΔιεύθυνσηEmail = Me.Columns("ΔιεύθυνσηEmail")
            Me.columnΔιεύθυνσηΧρέωσης = Me.Columns("ΔιεύθυνσηΧρέωσης")
            Me.columnΔΟΥ = Me.Columns("ΔΟΥ")
            Me.columnΕπάγγελμα = Me.Columns("Επάγγελμα")
            Me.columnΕπωνυμίαΕταιρείας = Me.Columns("ΕπωνυμίαΕταιρείας")
            Me.columnΕπώνυμοΕπαφής = Me.Columns("ΕπώνυμοΕπαφής")
            Me.columnΚωδΑγοραστή = Me.Columns("ΚωδΑγοραστή")
            Me.column_Νομός_Περιοχή = Me.Columns("Νομός/Περιοχή")
            Me.columnΌνομαΕπαφής = Me.Columns("ΌνομαΕπαφής")
            Me.columnΠόλη = Me.Columns("Πόλη")
            Me.columnΣημειώσεις = Me.Columns("Σημειώσεις")
            Me.columnΤαχυδρομικόςΚώδικας = Me.Columns("ΤαχυδρομικόςΚώδικας")
            Me.columnΤηλέφωνο = Me.Columns("Τηλέφωνο")
            Me.columnΤηλέφωνο1 = Me.Columns("Τηλέφωνο1")
            Me.column_Χώρα_Περιοχή = Me.Columns("Χώρα/Περιοχή")
        End Sub
        
        Private Sub InitClass()
            Me.columnkinhto = New DataColumn("kinhto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnkinhto)
            Me.columnwebsite = New DataColumn("website", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnwebsite)
            Me.columnΑριθμόςΦαξ = New DataColumn("ΑριθμόςΦαξ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΑριθμόςΦαξ)
            Me.columnΑΦΜ = New DataColumn("ΑΦΜ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΑΦΜ)
            Me.columnΔιεύθυνσηEmail = New DataColumn("ΔιεύθυνσηEmail", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔιεύθυνσηEmail)
            Me.columnΔιεύθυνσηΧρέωσης = New DataColumn("ΔιεύθυνσηΧρέωσης", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔιεύθυνσηΧρέωσης)
            Me.columnΔΟΥ = New DataColumn("ΔΟΥ", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΔΟΥ)
            Me.columnΕπάγγελμα = New DataColumn("Επάγγελμα", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπάγγελμα)
            Me.columnΕπωνυμίαΕταιρείας = New DataColumn("ΕπωνυμίαΕταιρείας", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπωνυμίαΕταιρείας)
            Me.columnΕπώνυμοΕπαφής = New DataColumn("ΕπώνυμοΕπαφής", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΕπώνυμοΕπαφής)
            Me.columnΚωδΑγοραστή = New DataColumn("ΚωδΑγοραστή", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΚωδΑγοραστή)
            Me.column_Νομός_Περιοχή = New DataColumn("Νομός/Περιοχή", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column_Νομός_Περιοχή)
            Me.columnΌνομαΕπαφής = New DataColumn("ΌνομαΕπαφής", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΌνομαΕπαφής)
            Me.columnΠόλη = New DataColumn("Πόλη", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΠόλη)
            Me.columnΣημειώσεις = New DataColumn("Σημειώσεις", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΣημειώσεις)
            Me.columnΤαχυδρομικόςΚώδικας = New DataColumn("ΤαχυδρομικόςΚώδικας", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤαχυδρομικόςΚώδικας)
            Me.columnΤηλέφωνο = New DataColumn("Τηλέφωνο", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤηλέφωνο)
            Me.columnΤηλέφωνο1 = New DataColumn("Τηλέφωνο1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnΤηλέφωνο1)
            Me.column_Χώρα_Περιοχή = New DataColumn("Χώρα/Περιοχή", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column_Χώρα_Περιοχή)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnΚωδΑγοραστή}, true))
            Me.columnΚωδΑγοραστή.AllowDBNull = false
            Me.columnΚωδΑγοραστή.Unique = true
        End Sub
        
        Public Function NewΠελατολόγιοRow() As ΠελατολόγιοRow
            Return CType(Me.NewRow,ΠελατολόγιοRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New ΠελατολόγιοRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(ΠελατολόγιοRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ΠελατολόγιοRowChangedEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowChanged(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ΠελατολόγιοRowChangingEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowChanging(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ΠελατολόγιοRowDeletedEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowDeleted(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ΠελατολόγιοRowDeletingEvent) Is Nothing) Then
                RaiseEvent ΠελατολόγιοRowDeleting(Me, New ΠελατολόγιοRowChangeEvent(CType(e.Row,ΠελατολόγιοRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveΠελατολόγιοRow(ByVal row As ΠελατολόγιοRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠελατολόγιοRow
        Inherits DataRow
        
        Private tableΠελατολόγιο As ΠελατολόγιοDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableΠελατολόγιο = CType(Me.Table,ΠελατολόγιοDataTable)
        End Sub
        
        Public Property kinhto As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.kinhtoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.kinhtoColumn) = value
            End Set
        End Property
        
        Public Property website As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.websiteColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.websiteColumn) = value
            End Set
        End Property
        
        Public Property ΑριθμόςΦαξ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn) = value
            End Set
        End Property
        
        Public Property ΑΦΜ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΑΦΜColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΑΦΜColumn) = value
            End Set
        End Property
        
        Public Property ΔιεύθυνσηEmail As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn) = value
            End Set
        End Property
        
        Public Property ΔιεύθυνσηΧρέωσης As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn) = value
            End Set
        End Property
        
        Public Property ΔΟΥ As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΔΟΥColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΔΟΥColumn) = value
            End Set
        End Property
        
        Public Property Επάγγελμα As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΕπάγγελμαColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΕπάγγελμαColumn) = value
            End Set
        End Property
        
        Public Property ΕπωνυμίαΕταιρείας As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn) = value
            End Set
        End Property
        
        Public Property ΕπώνυμοΕπαφής As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn) = value
            End Set
        End Property
        
        Public Property ΚωδΑγοραστή As String
            Get
                Return CType(Me(Me.tableΠελατολόγιο.ΚωδΑγοραστήColumn),String)
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΚωδΑγοραστήColumn) = value
            End Set
        End Property
        
        Public Property _Νομός_Περιοχή As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn) = value
            End Set
        End Property
        
        Public Property ΌνομαΕπαφής As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn) = value
            End Set
        End Property
        
        Public Property Πόλη As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΠόληColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΠόληColumn) = value
            End Set
        End Property
        
        Public Property Σημειώσεις As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΣημειώσειςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΣημειώσειςColumn) = value
            End Set
        End Property
        
        Public Property ΤαχυδρομικόςΚώδικας As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn) = value
            End Set
        End Property
        
        Public Property Τηλέφωνο As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.ΤηλέφωνοColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.ΤηλέφωνοColumn) = value
            End Set
        End Property
        
        Public Property Τηλέφωνο1 As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο.Τηλέφωνο1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο.Τηλέφωνο1Column) = value
            End Set
        End Property
        
        Public Property _Χώρα_Περιοχή As String
            Get
                Try 
                    Return CType(Me(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn) = value
            End Set
        End Property
        
        Public Function IskinhtoNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.kinhtoColumn)
        End Function
        
        Public Sub SetkinhtoNull()
            Me(Me.tableΠελατολόγιο.kinhtoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IswebsiteNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.websiteColumn)
        End Function
        
        Public Sub SetwebsiteNull()
            Me(Me.tableΠελατολόγιο.websiteColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΑριθμόςΦαξNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn)
        End Function
        
        Public Sub SetΑριθμόςΦαξNull()
            Me(Me.tableΠελατολόγιο.ΑριθμόςΦαξColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΑΦΜNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΑΦΜColumn)
        End Function
        
        Public Sub SetΑΦΜNull()
            Me(Me.tableΠελατολόγιο.ΑΦΜColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔιεύθυνσηEmailNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn)
        End Function
        
        Public Sub SetΔιεύθυνσηEmailNull()
            Me(Me.tableΠελατολόγιο.ΔιεύθυνσηEmailColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔιεύθυνσηΧρέωσηςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn)
        End Function
        
        Public Sub SetΔιεύθυνσηΧρέωσηςNull()
            Me(Me.tableΠελατολόγιο.ΔιεύθυνσηΧρέωσηςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΔΟΥNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΔΟΥColumn)
        End Function
        
        Public Sub SetΔΟΥNull()
            Me(Me.tableΠελατολόγιο.ΔΟΥColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπάγγελμαNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΕπάγγελμαColumn)
        End Function
        
        Public Sub SetΕπάγγελμαNull()
            Me(Me.tableΠελατολόγιο.ΕπάγγελμαColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπωνυμίαΕταιρείαςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn)
        End Function
        
        Public Sub SetΕπωνυμίαΕταιρείαςNull()
            Me(Me.tableΠελατολόγιο.ΕπωνυμίαΕταιρείαςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΕπώνυμοΕπαφήςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn)
        End Function
        
        Public Sub SetΕπώνυμοΕπαφήςNull()
            Me(Me.tableΠελατολόγιο.ΕπώνυμοΕπαφήςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Is_Νομός_ΠεριοχήNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn)
        End Function
        
        Public Sub Set_Νομός_ΠεριοχήNull()
            Me(Me.tableΠελατολόγιο._Νομός_ΠεριοχήColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΌνομαΕπαφήςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn)
        End Function
        
        Public Sub SetΌνομαΕπαφήςNull()
            Me(Me.tableΠελατολόγιο.ΌνομαΕπαφήςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΠόληNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΠόληColumn)
        End Function
        
        Public Sub SetΠόληNull()
            Me(Me.tableΠελατολόγιο.ΠόληColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΣημειώσειςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΣημειώσειςColumn)
        End Function
        
        Public Sub SetΣημειώσειςNull()
            Me(Me.tableΠελατολόγιο.ΣημειώσειςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤαχυδρομικόςΚώδικαςNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn)
        End Function
        
        Public Sub SetΤαχυδρομικόςΚώδικαςNull()
            Me(Me.tableΠελατολόγιο.ΤαχυδρομικόςΚώδικαςColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤηλέφωνοNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.ΤηλέφωνοColumn)
        End Function
        
        Public Sub SetΤηλέφωνοNull()
            Me(Me.tableΠελατολόγιο.ΤηλέφωνοColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsΤηλέφωνο1Null() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο.Τηλέφωνο1Column)
        End Function
        
        Public Sub SetΤηλέφωνο1Null()
            Me(Me.tableΠελατολόγιο.Τηλέφωνο1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is_Χώρα_ΠεριοχήNull() As Boolean
            Return Me.IsNull(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn)
        End Function
        
        Public Sub Set_Χώρα_ΠεριοχήNull()
            Me(Me.tableΠελατολόγιο._Χώρα_ΠεριοχήColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ΠελατολόγιοRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As ΠελατολόγιοRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As ΠελατολόγιοRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As ΠελατολόγιοRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
